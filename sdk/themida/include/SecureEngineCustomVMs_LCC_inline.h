/******************************************************************************
 * Header: SecureEngineCustomVMs_LCC_inline.h
 * Description: LCC inline assembly macros definitions
 *
 * Author/s: Oreans Technologies 
 * (c) 2013 Oreans Technologies
 *
 * --- File generated automatically from Oreans VM Generator (14/9/2013) ---
 ******************************************************************************/

/***********************************************
 * Definition as inline assembly
 ***********************************************/

#ifdef PLATFORM_X32

#define VM_TIGER_WHITE_START           __asm__ (" .byte\t0xEB, 0x10, 0x57, 0x4C, 0x20, 0x20, 0x64, 0x00, 0x00, 0x00, \
                                                 0x00, 0x00, 0x00, 0x00, 0x57, 0x4C, 0x20, 0x20");

#define VM_TIGER_WHITE_END             __asm__ (" .byte\t0xEB, 0x10, 0x57, 0x4C, 0x20, 0x20, 0xF4, 0x01, 0x00, 0x00, \
                                                 0x00, 0x00, 0x00, 0x00, 0x57, 0x4C, 0x20, 0x20");

#define VM_TIGER_RED_START             __asm__ (" .byte\t0xEB, 0x10, 0x57, 0x4C, 0x20, 0x20, 0x65, 0x00, 0x00, 0x00, \
                                                 0x00, 0x00, 0x00, 0x00, 0x57, 0x4C, 0x20, 0x20");

#define VM_TIGER_RED_END               __asm__ (" .byte\t0xEB, 0x10, 0x57, 0x4C, 0x20, 0x20, 0xF5, 0x01, 0x00, 0x00, \
                                                 0x00, 0x00, 0x00, 0x00, 0x57, 0x4C, 0x20, 0x20");

#define VM_TIGER_BLACK_START           __asm__ (" .byte\t0xEB, 0x10, 0x57, 0x4C, 0x20, 0x20, 0x66, 0x00, 0x00, 0x00, \
                                                 0x00, 0x00, 0x00, 0x00, 0x57, 0x4C, 0x20, 0x20");

#define VM_TIGER_BLACK_END             __asm__ (" .byte\t0xEB, 0x10, 0x57, 0x4C, 0x20, 0x20, 0xF6, 0x01, 0x00, 0x00, \
                                                 0x00, 0x00, 0x00, 0x00, 0x57, 0x4C, 0x20, 0x20");

#define VM_FISH_WHITE_START            __asm__ (" .byte\t0xEB, 0x10, 0x57, 0x4C, 0x20, 0x20, 0x6A, 0x00, 0x00, 0x00, \
                                                 0x00, 0x00, 0x00, 0x00, 0x57, 0x4C, 0x20, 0x20");

#define VM_FISH_WHITE_END              __asm__ (" .byte\t0xEB, 0x10, 0x57, 0x4C, 0x20, 0x20, 0xFA, 0x01, 0x00, 0x00, \
                                                 0x00, 0x00, 0x00, 0x00, 0x57, 0x4C, 0x20, 0x20");

#define VM_FISH_RED_START              __asm__ (" .byte\t0xEB, 0x10, 0x57, 0x4C, 0x20, 0x20, 0x6C, 0x00, 0x00, 0x00, \
                                                 0x00, 0x00, 0x00, 0x00, 0x57, 0x4C, 0x20, 0x20");

#define VM_FISH_RED_END                __asm__ (" .byte\t0xEB, 0x10, 0x57, 0x4C, 0x20, 0x20, 0xFC, 0x01, 0x00, 0x00, \
                                                 0x00, 0x00, 0x00, 0x00, 0x57, 0x4C, 0x20, 0x20");

#define VM_FISH_BLACK_START            __asm__ (" .byte\t0xEB, 0x10, 0x57, 0x4C, 0x20, 0x20, 0x6E, 0x00, 0x00, 0x00, \
                                                 0x00, 0x00, 0x00, 0x00, 0x57, 0x4C, 0x20, 0x20");

#define VM_FISH_BLACK_END              __asm__ (" .byte\t0xEB, 0x10, 0x57, 0x4C, 0x20, 0x20, 0xFE, 0x01, 0x00, 0x00, \
                                                 0x00, 0x00, 0x00, 0x00, 0x57, 0x4C, 0x20, 0x20");

#endif

#ifdef PLATFORM_X64

#define VM_TIGER_WHITE_START           __asm__ (" .byte\t0xEB, 0x10, 0x57, 0x4C, 0x20, 0x20, 0x67, 0x00, 0x00, 0x00, \
                                                 0x00, 0x00, 0x00, 0x00, 0x57, 0x4C, 0x20, 0x20");

#define VM_TIGER_WHITE_END             __asm__ (" .byte\t0xEB, 0x10, 0x57, 0x4C, 0x20, 0x20, 0xF7, 0x01, 0x00, 0x00, \
                                                 0x00, 0x00, 0x00, 0x00, 0x57, 0x4C, 0x20, 0x20");

#define VM_TIGER_RED_START             __asm__ (" .byte\t0xEB, 0x10, 0x57, 0x4C, 0x20, 0x20, 0x68, 0x00, 0x00, 0x00, \
                                                 0x00, 0x00, 0x00, 0x00, 0x57, 0x4C, 0x20, 0x20");

#define VM_TIGER_RED_END               __asm__ (" .byte\t0xEB, 0x10, 0x57, 0x4C, 0x20, 0x20, 0xF8, 0x01, 0x00, 0x00, \
                                                 0x00, 0x00, 0x00, 0x00, 0x57, 0x4C, 0x20, 0x20");

#define VM_TIGER_BLACK_START           __asm__ (" .byte\t0xEB, 0x10, 0x57, 0x4C, 0x20, 0x20, 0x69, 0x00, 0x00, 0x00, \
                                                 0x00, 0x00, 0x00, 0x00, 0x57, 0x4C, 0x20, 0x20");

#define VM_TIGER_BLACK_END             __asm__ (" .byte\t0xEB, 0x10, 0x57, 0x4C, 0x20, 0x20, 0xF9, 0x01, 0x00, 0x00, \
                                                 0x00, 0x00, 0x00, 0x00, 0x57, 0x4C, 0x20, 0x20");

#define VM_FISH_WHITE_START            __asm__ (" .byte\t0xEB, 0x10, 0x57, 0x4C, 0x20, 0x20, 0x6B, 0x00, 0x00, 0x00, \
                                                 0x00, 0x00, 0x00, 0x00, 0x57, 0x4C, 0x20, 0x20");

#define VM_FISH_WHITE_END              __asm__ (" .byte\t0xEB, 0x10, 0x57, 0x4C, 0x20, 0x20, 0xFB, 0x01, 0x00, 0x00, \
                                                 0x00, 0x00, 0x00, 0x00, 0x57, 0x4C, 0x20, 0x20");

#define VM_FISH_RED_START              __asm__ (" .byte\t0xEB, 0x10, 0x57, 0x4C, 0x20, 0x20, 0x6D, 0x00, 0x00, 0x00, \
                                                 0x00, 0x00, 0x00, 0x00, 0x57, 0x4C, 0x20, 0x20");

#define VM_FISH_RED_END                __asm__ (" .byte\t0xEB, 0x10, 0x57, 0x4C, 0x20, 0x20, 0xFD, 0x01, 0x00, 0x00, \
                                                 0x00, 0x00, 0x00, 0x00, 0x57, 0x4C, 0x20, 0x20");

#define VM_FISH_BLACK_START            __asm__ (" .byte\t0xEB, 0x10, 0x57, 0x4C, 0x20, 0x20, 0x6F, 0x00, 0x00, 0x00, \
                                                 0x00, 0x00, 0x00, 0x00, 0x57, 0x4C, 0x20, 0x20");

#define VM_FISH_BLACK_END              __asm__ (" .byte\t0xEB, 0x10, 0x57, 0x4C, 0x20, 0x20, 0xFF, 0x01, 0x00, 0x00, \
                                                 0x00, 0x00, 0x00, 0x00, 0x57, 0x4C, 0x20, 0x20");

#endif

